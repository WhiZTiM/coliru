#include <iostream>#include <fstream>#include <string>#include <sys/stat.h>#include <map>using namespace std;class Something{public:    string location;bool isLocal;    string IPAddress;};long GetFileSize(std::string filename){    struct stat stat_buf;    int rc = stat(filename.c_str(), &stat_buf);    return rc == 0 ? stat_buf.st_size : -1;} std::map<string, string*> createMap(){//    std::cout << "starting createMap()" << std::endl;    Something local;    string line;    ifstream myfile ("//Archive2//b3//b1559b8971067b//main.cpp");    long num = GetFileSize("//Archive2//b3//b1559b8971067b//main.cpp");    string *myArray;    myArray = new string[num];    string str1 = "";    string strNew2 = "";    int counter = 0;    if (myfile.is_open())    {        while ( getline (myfile,line) )        {            myArray[counter] = line;            counter++;        }        myfile.close();    }    //myarray should not conist of every line of the XML file aka myarray[0] is one line, myarray[1] is the next line, and so on...    std::map<string, string*> varmap;    varmap["location"] = &local.location;    varmap["IPAddress"] = &local.IPAddress;    int counter2 = 0;    for(int i = 0; i < static_cast<int>(myArray->size()); i++)    {//        std::cout << "i is: " << i << std::endl;        string line = myArray[i];        if((line.find("<") != std::string::npos) && (line.find(">")!= std::string::npos))         {            unsigned first = line.find("<");            unsigned last = line.find(">");            string strNew = line.substr (first + 1, last - first - 1); //this line will get the key, in this case, "IPAddress"            unsigned newfirst = line.find(">");            unsigned newlast = line.find_last_of("<");            string strNew2 = line.substr(newfirst + 1, newlast - newfirst - 1); //this line will get the value, in this case, "123.45.67"	            //because isLocal is my only variable that is not of type string, not including it in map, just doing separate assignments!! I have a lot more member variables in my actual program,            //but all of them are strings except for this isLocal            if(strNew == "isLocal")            {                counter2++;                if(strNew2 == "true")                {                    local.isLocal = true;                }                else                 {                    local.isLocal = false;                }            }            else if(varmap.find(strNew) != varmap.end() )            {//                std::cout << "strNew2 is:" << strNew2 << std::endl;                *varmap[strNew] = strNew2;            }        }    }    if(counter2 == 0)    {        local.isLocal = false;    }    return varmap;}string returnAnswer(std::map<string, string*> mapvar, string key){    Something local;    if(key == "isLocal")    {        string toreturn = local.isLocal ? "true" : "false";        cout << toreturn << endl;        return toreturn;    }    cout << *mapvar[key] << endl;    return *mapvar[key];}int main(int argc, char* argv[]){    for(const std::pair<string, string*> item : createMap())         cout << item.first << " " << *item.second << endl;        return 0;}