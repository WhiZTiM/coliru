In file included from main.cpp:1:
In file included from /usr/local/include/boost/range/adaptor/transformed.hpp:15:
In file included from /usr/local/include/boost/range/detail/default_constructible_unary_fn.hpp:13:
/usr/local/include/boost/optional/optional.hpp:674:80: error: object of type 'std::_Bind<std::_Mem_fn<int (B::*)(const A &, int)> (B *, std::reference_wrapper<A>, std::_Placeholder<1>)>' cannot be assigned because its copy assignment operator is implicitly deleted
    void assign_value ( argument_type val, is_not_reference_tag ) { get_impl() = val; }
                                                                               ^
/usr/local/include/boost/optional/optional.hpp:335:14: note: in instantiation of member function 'boost::optional_detail::optional_base<std::_Bind<std::_Mem_fn<int (B::*)(const A &, int)> (B *, std::reference_wrapper<A>, std::_Placeholder<1>)> >::assign_value' requested here
             assign_value(rhs.get_impl(), is_reference_predicate() );
             ^
/usr/local/include/boost/optional/optional.hpp:911:15: note: in instantiation of member function 'boost::optional_detail::optional_base<std::_Bind<std::_Mem_fn<int (B::*)(const A &, int)> (B *, std::reference_wrapper<A>, std::_Placeholder<1>)> >::assign' requested here
        this->assign( static_cast<base const&>(rhs) ) ;
              ^
/usr/local/include/boost/range/detail/default_constructible_unary_fn.hpp:23:7: note: in instantiation of member function 'boost::optional<std::_Bind<std::_Mem_fn<int (B::*)(const A &, int)> (B *, std::reference_wrapper<A>, std::_Placeholder<1>)> >::operator=' requested here
class default_constructible_unary_fn_wrapper
      ^
main.cpp:31:23: note: in instantiation of function template specialization 'boost::range::min_element<boost::range_detail::transformed_range<std::_Bind<std::_Mem_fn<int (B::*)(const A &, int)> (B *, std::reference_wrapper<A>, std::_Placeholder<1>)>, std::vector<int, std::allocator<int> > > >' requested here
    int min = *boost::min_element(values | boost::adaptors::transformed(fun));
                      ^
/usr/local/bin/../lib/gcc/x86_64-unknown-linux-gnu/5.1.0/../../../../include/c++/5.1.0/functional:1119:7: note: copy assignment operator is implicitly deleted because '_Bind<std::_Mem_fn<int (B::*)(const A &, int)> (B *, std::reference_wrapper<A>, std::_Placeholder<1>)>' has a user-declared move constructor
      _Bind(_Bind&& __b)
      ^
1 error generated.
