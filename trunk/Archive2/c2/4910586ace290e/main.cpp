#include <boost/preprocessor.hpp>

#define PLACEHOLDER_0(X, Y, Z)  \
    ((X, Y, Z)) PLACEHOLDER_1
#define PLACEHOLDER_1(X, Y, Z)  \
    ((X, Y, Z)) PLACEHOLDER_0
#define PLACEHOLDER_0_END
#define PLACEHOLDER_1_END

#define DECLARE_DATA(R,_,TYPE_NAME_VALUE) BOOST_PP_TUPLE_ELEM(2,0,TYPE_NAME_VALUE) BOOST_PP_CAT(,BOOST_PP_TUPLE_ELEM(2,1,TYPE_NAME_VALUE))BOOST_PP_CAT(=,BOOST_PP_TUPLE_ELEM(2,2,TYPE_NAME_VALUE));

#define DECL_VALS(TYPE_NAME_VALUE) \
BOOST_PP_SEQ_FOR_EACH(DECLARE_DATA,_,BOOST_PP_CAT(PLACEHOLDER_0 TYPE_NAME_VALUE,_END))

#define DECLARE_PARAMS(R,_,TYPE_NAME_VALUE) BOOST_PP_STRINGIZE(BOOST_PP_TUPLE_ELEM(2,1,TYPE_NAME_VALUE)), BOOST_PP_CAT(,BOOST_PP_TUPLE_ELEM(2,1,TYPE_NAME_VALUE)),

#define FUNC_PARAMS(TYPE_NAME_VALUE) \
BOOST_PP_SEQ_FOR_EACH(DECLARE_PARAMS,_,BOOST_PP_CAT(PLACEHOLDER_0 TYPE_NAME_VALUE,_END))

#define seq (int,x,10)(float,y,10.0)(double,z,20.0)

struct C
{
    DECL_VALS(seq)
    f(FUNC_PARAMS(seq));
};