In file included from /usr/local/include/boost/proto/transform/default.hpp:30:0,
                 from /usr/local/include/boost/phoenix/core/meta_grammar.hpp:17,
                 from /usr/local/include/boost/phoenix/core/is_nullary.hpp:15,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:20,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/proto/transform/default.hpp: In instantiation of 'struct boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>&, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >*, const boost::fusion::vector1<std::vector<char, std::allocator<char> >&>&, const boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >&, const bool&>&, const boost::phoenix::default_actions&>':
/usr/local/include/boost/proto/matches.hpp:834:16:   required from 'struct boost::proto::switch_<boost::proto::detail::default_cases<boost::phoenix::meta_grammar>, boost::proto::tag_of<boost::proto::_>()>::impl<const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>&, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >*, const boost::fusion::vector1<std::vector<char, std::allocator<char> >&>&, const boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >&, const bool&>&, const boost::phoenix::default_actions&>'
/usr/local/include/boost/proto/transform/when.hpp:186:16:   required from 'struct boost::proto::when<boost::phoenix::rule::assign, boost::proto::external_transform>::impl<const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>&, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >*, const boost::fusion::vector1<std::vector<char, std::allocator<char> >&>&, const boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >&, const bool&>&, const boost::phoenix::default_actions&>'
/usr/local/include/boost/proto/matches.hpp:834:16:   required from 'struct boost::proto::switch_<boost::phoenix::meta_grammar>::impl<const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>&, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >*, const boost::fusion::vector1<std::vector<char, std::allocator<char> >&>&, const boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >&, const bool&>&, const boost::phoenix::default_actions&>'
/usr/local/include/boost/phoenix/core/meta_grammar.hpp:66:48:   required from 'struct boost::phoenix::evaluator::impl<const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>&, const boost::phoenix::vector2<boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >*, const boost::fusion::vector1<std::vector<char, std::allocator<char> >&>&, const boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >&, const bool&>&, boost::phoenix::default_actions>&, boost::proto::envns_::empty_env>'
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_result_of_10.hpp:104:17:   required from 'struct boost::phoenix::result_of::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>, const boost::fusion::vector1<std::vector<char, std::allocator<char> >&>&, const boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >&, const bool&, void, void, void, void, void, void, void, void>'
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:88:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/boost/function/function_template.hpp:1077:16:   required from 'boost::function<R(T0, T1, T2, T3)>::function(Functor, typename boost::enable_if_c<(boost::type_traits::ice_not<(boost::is_integral<Functor>::value)>::value), int>::type) [with Functor = boost::spirit::qi::detail::parser_binder<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::lexeme_directive<boost::spirit::qi::plus<boost::spirit::qi::negated_char_parser<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, false, false> > > >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, boost::fusion::cons<boost::spirit::qi::lexeme_directive<boost::spirit::qi::plus<boost::spirit::qi::negated_char_parser<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, false, false> > > >, boost::fusion::nil_> > >, mpl_::bool_<true> >; R = bool; T0 = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >&; T1 = const __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >&; T2 = boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >&; T3 = const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::standard> >&; typename boost::enable_if_c<(boost::type_traits::ice_not<(boost::is_integral<Functor>::value)>::value), int>::type = int]'
/usr/local/include/boost/function/function_template.hpp:1132:5:   required from 'typename boost::enable_if_c<(boost::type_traits::ice_not<(boost::is_integral<Functor>::value)>::value), boost::function<R(T0, T1, T2, T3)>&>::type boost::function<R(T0, T1, T2, T3)>::operator=(Functor) [with Functor = boost::spirit::qi::detail::parser_binder<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::lexeme_directive<boost::spirit::qi::plus<boost::spirit::qi::negated_char_parser<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, false, false> > > >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, boost::fusion::cons<boost::spirit::qi::lexeme_directive<boost::spirit::qi::plus<boost::spirit::qi::negated_char_parser<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, false, false> > > >, boost::fusion::nil_> > >, mpl_::bool_<true> >; R = bool; T0 = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >&; T1 = const __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >&; T2 = boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >&; T3 = const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::standard> >&; typename boost::enable_if_c<(boost::type_traits::ice_not<(boost::is_integral<Functor>::value)>::value), boost::function<R(T0, T1, T2, T3)>&>::type = boost::function<bool(__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >&, const __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >&, boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >&, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::standard> >&)>&]'
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:183:19:   required from 'static void boost::spirit::qi::rule<Iterator, T1, T2, T3, T4>::define(boost::spirit::qi::rule<Iterator, T1, T2, T3, T4>&, const Expr&, mpl_::true_) [with Auto = mpl_::bool_<true>; Expr = boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::unary_plus, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::complement, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_, boost::spirit::char_encoding::standard>, boost::fusion::vector1<char> > >, 0l>&>, 1l>&>, 1l>&>, 2l>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::unary_plus, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::complement, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_, boost::spirit::char_encoding::standard>, boost::fusion::vector1<char> > >, 0l>&>, 1l>&>, 1l>&>, 2l>&>, 2l>; Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; T1 = bla(); T2 = boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::standard> >, 0l>; T3 = boost::spirit::unused_type; T4 = boost::spirit::unused_type; mpl_::true_ = mpl_::bool_<true>]'
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:247:31:   required from 'boost::spirit::qi::rule<Iterator, T1, T2, T3, T4>& boost::spirit::qi::operator%=(boost::spirit::qi::rule<Iterator, T1, T2, T3, T4>&, Expr&&) [with Expr = const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::unary_plus, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::complement, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_, boost::spirit::char_encoding::standard>, boost::fusion::vector1<char> > >, 0l>&>, 1l>&>, 1l>&>, 2l>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::unary_plus, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::complement, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_, boost::spirit::char_encoding::standard>, boost::fusion::vector1<char> > >, 0l>&>, 1l>&>, 1l>&>, 2l>&>, 2l>; Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; T1 = bla(); T2 = boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::standard> >, 0l>; T3 = boost::spirit::unused_type; T4 = boost::spirit::unused_type]'
main.cpp:48:9:   required from 'myCommandParser<Iterator, Skipper>::myCommandParser() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; Skipper = boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::standard> >, 0l>]'
main.cpp:61:66:   required from here
/usr/local/include/boost/proto/transform/default.hpp:154:9: error: no match for 'operator=' (operand types are 'std::__cxx11::basic_string<char>' and 'std::vector<char, std::allocator<char> >')
         BOOST_PROTO_BINARY_DEFAULT_EVAL(=, assign, make_mutable, make)
         ^
In file included from /usr/local/include/c++/5.1.0/string:52:0,
                 from /usr/local/include/c++/5.1.0/stdexcept:39,
                 from /usr/local/include/c++/5.1.0/array:38,
                 from /usr/local/include/c++/5.1.0/tuple:39,
                 from /usr/local/include/c++/5.1.0/functional:55,
                 from /usr/local/include/c++/5.1.0/memory:79,
                 from /usr/local/include/boost/config/no_tr1/memory.hpp:21,
                 from /usr/local/include/boost/get_pointer.hpp:14,
                 from /usr/local/include/boost/bind/mem_fn.hpp:25,
                 from /usr/local/include/boost/mem_fn.hpp:22,
                 from /usr/local/include/boost/bind/bind.hpp:26,
                 from /usr/local/include/boost/bind.hpp:22,
                 from main.cpp:12:
/usr/local/include/c++/5.1.0/bits/basic_string.h:548:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       operator=(const basic_string& __str)
       ^
/usr/local/include/c++/5.1.0/bits/basic_string.h:548:7: note:   no known conversion for argument 1 from 'std::vector<char, std::allocator<char> >' to 'const std::__cxx11::basic_string<char>&'
/usr/local/include/c++/5.1.0/bits/basic_string.h:556:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       operator=(const _CharT* __s)
       ^
/usr/local/include/c++/5.1.0/bits/basic_string.h:556:7: note:   no known conversion for argument 1 from 'std::vector<char, std::allocator<char> >' to 'const char*'
/usr/local/include/c++/5.1.0/bits/basic_string.h:567:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(_CharT) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       operator=(_CharT __c)
       ^
/usr/local/include/c++/5.1.0/bits/basic_string.h:567:7: note:   no known conversion for argument 1 from 'std::vector<char, std::allocator<char> >' to 'char'
/usr/local/include/c++/5.1.0/bits/basic_string.h:585:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       operator=(basic_string&& __str)
       ^
/usr/local/include/c++/5.1.0/bits/basic_string.h:585:7: note:   no known conversion for argument 1 from 'std::vector<char, std::allocator<char> >' to 'std::__cxx11::basic_string<char>&&'
/usr/local/include/c++/5.1.0/bits/basic_string.h:596:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(std::initializer_list<_Tp>) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       operator=(initializer_list<_CharT> __l)
       ^
/usr/local/include/c++/5.1.0/bits/basic_string.h:596:7: note:   no known conversion for argument 1 from 'std::vector<char, std::allocator<char> >' to 'std::initializer_list<char>'
In file included from /usr/local/include/boost/proto/transform/default.hpp:30:0,
                 from /usr/local/include/boost/phoenix/core/meta_grammar.hpp:17,
                 from /usr/local/include/boost/phoenix/core/is_nullary.hpp:15,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:20,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/proto/transform/default.hpp: In instantiation of 'struct boost::proto::detail::default_assign<boost::phoenix::meta_grammar>::impl<const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>&, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >*, boost::fusion::vector1<std::vector<char, std::allocator<char> >&>&, boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >&, bool&>&, const boost::phoenix::default_actions&>':
/usr/local/include/boost/proto/matches.hpp:834:16:   required from 'struct boost::proto::switch_<boost::proto::detail::default_cases<boost::phoenix::meta_grammar>, boost::proto::tag_of<boost::proto::_>()>::impl<const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>&, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >*, boost::fusion::vector1<std::vector<char, std::allocator<char> >&>&, boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >&, bool&>&, const boost::phoenix::default_actions&>'
/usr/local/include/boost/proto/transform/when.hpp:186:16:   required from 'struct boost::proto::when<boost::phoenix::rule::assign, boost::proto::external_transform>::impl<const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>&, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >*, boost::fusion::vector1<std::vector<char, std::allocator<char> >&>&, boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >&, bool&>&, const boost::phoenix::default_actions&>'
/usr/local/include/boost/proto/matches.hpp:834:16:   required from 'struct boost::proto::switch_<boost::phoenix::meta_grammar>::impl<const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>&, boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >*, boost::fusion::vector1<std::vector<char, std::allocator<char> >&>&, boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >&, bool&>&, const boost::phoenix::default_actions&>'
/usr/local/include/boost/phoenix/core/meta_grammar.hpp:66:48:   required from 'struct boost::phoenix::evaluator::impl<const boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>&, const boost::phoenix::vector2<boost::phoenix::vector4<const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >*, boost::fusion::vector1<std::vector<char, std::allocator<char> >&>&, boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >&, bool&>&, boost::phoenix::default_actions>&, boost::proto::envns_::empty_env>'
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_result_of_10.hpp:104:17:   required from 'struct boost::phoenix::result_of::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>, boost::fusion::vector1<std::vector<char, std::allocator<char> >&>&, boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >&, bool&, void, void, void, void, void, void, void, void>'
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:62:9:   [ skipping 12 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/boost/function/function_template.hpp:1077:16:   required from 'boost::function<R(T0, T1, T2, T3)>::function(Functor, typename boost::enable_if_c<(boost::type_traits::ice_not<(boost::is_integral<Functor>::value)>::value), int>::type) [with Functor = boost::spirit::qi::detail::parser_binder<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::lexeme_directive<boost::spirit::qi::plus<boost::spirit::qi::negated_char_parser<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, false, false> > > >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, boost::fusion::cons<boost::spirit::qi::lexeme_directive<boost::spirit::qi::plus<boost::spirit::qi::negated_char_parser<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, false, false> > > >, boost::fusion::nil_> > >, mpl_::bool_<true> >; R = bool; T0 = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >&; T1 = const __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >&; T2 = boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >&; T3 = const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::standard> >&; typename boost::enable_if_c<(boost::type_traits::ice_not<(boost::is_integral<Functor>::value)>::value), int>::type = int]'
/usr/local/include/boost/function/function_template.hpp:1132:5:   required from 'typename boost::enable_if_c<(boost::type_traits::ice_not<(boost::is_integral<Functor>::value)>::value), boost::function<R(T0, T1, T2, T3)>&>::type boost::function<R(T0, T1, T2, T3)>::operator=(Functor) [with Functor = boost::spirit::qi::detail::parser_binder<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::lexeme_directive<boost::spirit::qi::plus<boost::spirit::qi::negated_char_parser<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, false, false> > > >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, boost::fusion::cons<boost::spirit::qi::lexeme_directive<boost::spirit::qi::plus<boost::spirit::qi::negated_char_parser<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, false, false> > > >, boost::fusion::nil_> > >, mpl_::bool_<true> >; R = bool; T0 = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >&; T1 = const __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >&; T2 = boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >&; T3 = const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::standard> >&; typename boost::enable_if_c<(boost::type_traits::ice_not<(boost::is_integral<Functor>::value)>::value), boost::function<R(T0, T1, T2, T3)>&>::type = boost::function<bool(__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >&, const __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >&, boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >&, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::standard> >&)>&]'
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:183:19:   required from 'static void boost::spirit::qi::rule<Iterator, T1, T2, T3, T4>::define(boost::spirit::qi::rule<Iterator, T1, T2, T3, T4>&, const Expr&, mpl_::true_) [with Auto = mpl_::bool_<true>; Expr = boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::unary_plus, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::complement, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_, boost::spirit::char_encoding::standard>, boost::fusion::vector1<char> > >, 0l>&>, 1l>&>, 1l>&>, 2l>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::unary_plus, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::complement, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_, boost::spirit::char_encoding::standard>, boost::fusion::vector1<char> > >, 0l>&>, 1l>&>, 1l>&>, 2l>&>, 2l>; Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; T1 = bla(); T2 = boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::standard> >, 0l>; T3 = boost::spirit::unused_type; T4 = boost::spirit::unused_type; mpl_::true_ = mpl_::bool_<true>]'
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:247:31:   required from 'boost::spirit::qi::rule<Iterator, T1, T2, T3, T4>& boost::spirit::qi::operator%=(boost::spirit::qi::rule<Iterator, T1, T2, T3, T4>&, Expr&&) [with Expr = const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::unary_plus, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::complement, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_, boost::spirit::char_encoding::standard>, boost::fusion::vector1<char> > >, 0l>&>, 1l>&>, 1l>&>, 2l>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::unary_plus, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::complement, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_, boost::spirit::char_encoding::standard>, boost::fusion::vector1<char> > >, 0l>&>, 1l>&>, 1l>&>, 2l>&>, 2l>; Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; T1 = bla(); T2 = boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::standard> >, 0l>; T3 = boost::spirit::unused_type; T4 = boost::spirit::unused_type]'
main.cpp:48:9:   required from 'myCommandParser<Iterator, Skipper>::myCommandParser() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; Skipper = boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::standard> >, 0l>]'
main.cpp:61:66:   required from here
/usr/local/include/boost/proto/transform/default.hpp:154:9: error: no match for 'operator=' (operand types are 'std::__cxx11::basic_string<char>' and 'std::vector<char, std::allocator<char> >')
         BOOST_PROTO_BINARY_DEFAULT_EVAL(=, assign, make_mutable, make)
         ^
In file included from /usr/local/include/c++/5.1.0/string:52:0,
                 from /usr/local/include/c++/5.1.0/stdexcept:39,
                 from /usr/local/include/c++/5.1.0/array:38,
                 from /usr/local/include/c++/5.1.0/tuple:39,
                 from /usr/local/include/c++/5.1.0/functional:55,
                 from /usr/local/include/c++/5.1.0/memory:79,
                 from /usr/local/include/boost/config/no_tr1/memory.hpp:21,
                 from /usr/local/include/boost/get_pointer.hpp:14,
                 from /usr/local/include/boost/bind/mem_fn.hpp:25,
                 from /usr/local/include/boost/mem_fn.hpp:22,
                 from /usr/local/include/boost/bind/bind.hpp:26,
                 from /usr/local/include/boost/bind.hpp:22,
                 from main.cpp:12:
/usr/local/include/c++/5.1.0/bits/basic_string.h:548:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       operator=(const basic_string& __str)
       ^
/usr/local/include/c++/5.1.0/bits/basic_string.h:548:7: note:   no known conversion for argument 1 from 'std::vector<char, std::allocator<char> >' to 'const std::__cxx11::basic_string<char>&'
/usr/local/include/c++/5.1.0/bits/basic_string.h:556:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       operator=(const _CharT* __s)
       ^
/usr/local/include/c++/5.1.0/bits/basic_string.h:556:7: note:   no known conversion for argument 1 from 'std::vector<char, std::allocator<char> >' to 'const char*'
/usr/local/include/c++/5.1.0/bits/basic_string.h:567:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(_CharT) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       operator=(_CharT __c)
       ^
/usr/local/include/c++/5.1.0/bits/basic_string.h:567:7: note:   no known conversion for argument 1 from 'std::vector<char, std::allocator<char> >' to 'char'
/usr/local/include/c++/5.1.0/bits/basic_string.h:585:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       operator=(basic_string&& __str)
       ^
/usr/local/include/c++/5.1.0/bits/basic_string.h:585:7: note:   no known conversion for argument 1 from 'std::vector<char, std::allocator<char> >' to 'std::__cxx11::basic_string<char>&&'
/usr/local/include/c++/5.1.0/bits/basic_string.h:596:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(std::initializer_list<_Tp>) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]
       operator=(initializer_list<_CharT> __l)
       ^
/usr/local/include/c++/5.1.0/bits/basic_string.h:596:7: note:   no known conversion for argument 1 from 'std::vector<char, std::allocator<char> >' to 'std::initializer_list<char>'
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp: In instantiation of 'bool boost::spirit::traits::action_dispatch<Component>::operator()(const boost::phoenix::actor<Eval>&, Attribute&, Context&) [with Eval = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>; Attribute = std::vector<char, std::allocator<char> >; Context = boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >; Component = boost::spirit::qi::lexeme_directive<boost::spirit::qi::plus<boost::spirit::qi::negated_char_parser<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, false, false> > > >]':
/usr/local/include/boost/spirit/home/qi/action/action.hpp:69:55:   required from 'bool boost::spirit::qi::action<Subject, Action>::parse(Iterator&, const Iterator&, Context&, const Skipper&, Attribute&) const [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; Context = boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >; Skipper = boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::standard> >; Attribute = std::__cxx11::basic_string<char>; Subject = boost::spirit::qi::lexeme_directive<boost::spirit::qi::plus<boost::spirit::qi::negated_char_parser<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, false, false> > > >; Action = boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >]'
/usr/local/include/boost/spirit/home/qi/detail/fail_function.hpp:38:20:   required from 'bool boost::spirit::qi::detail::fail_function<Iterator, Context, Skipper>::operator()(const Component&, Attribute&) const [with Component = boost::spirit::qi::action<boost::spirit::qi::lexeme_directive<boost::spirit::qi::plus<boost::spirit::qi::negated_char_parser<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, false, false> > > >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >; Attribute = std::__cxx11::basic_string<char>; Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; Context = boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >; Skipper = boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::standard> >]'
/usr/local/include/boost/spirit/home/support/algorithm/any_if.hpp:186:21:   required from 'bool boost::spirit::detail::any_if(const First1&, const First2&, const Last1&, const Last2&, F&, mpl_::false_) [with Pred = boost::spirit::traits::attribute_not_unused<boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; First1 = boost::fusion::cons_iterator<const boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::lexeme_directive<boost::spirit::qi::plus<boost::spirit::qi::negated_char_parser<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, false, false> > > >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, boost::fusion::cons<boost::spirit::qi::lexeme_directive<boost::spirit::qi::plus<boost::spirit::qi::negated_char_parser<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, false, false> > > >, boost::fusion::nil_> > >; Last1 = boost::fusion::cons_iterator<const boost::fusion::nil_>; First2 = boost::fusion::basic_iterator<boost::fusion::struct_iterator_tag, boost::fusion::random_access_traversal_tag, bla, 0>; Last2 = boost::fusion::basic_iterator<boost::fusion::struct_iterator_tag, boost::fusion::random_access_traversal_tag, bla, 2>; F = boost::spirit::qi::detail::fail_function<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >, boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::standard> > >; mpl_::false_ = mpl_::bool_<false>]'
/usr/local/include/boost/spirit/home/support/algorithm/any_if.hpp:201:36:   required from 'bool boost::spirit::any_if(const Sequence1&, Sequence2&, F, Pred) [with Pred = boost::spirit::traits::attribute_not_unused<boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >, __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> > >; Sequence1 = boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::lexeme_directive<boost::spirit::qi::plus<boost::spirit::qi::negated_char_parser<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, false, false> > > >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, boost::fusion::cons<boost::spirit::qi::lexeme_directive<boost::spirit::qi::plus<boost::spirit::qi::negated_char_parser<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, false, false> > > >, boost::fusion::nil_> >; Sequence2 = bla; F = boost::spirit::qi::detail::fail_function<__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >, boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >, boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::standard> > >]'
/usr/local/include/boost/spirit/home/qi/operator/sequence_base.hpp:87:31:   required from 'bool boost::spirit::qi::sequence_base<Derived, Elements>::parse_impl(Iterator&, const Iterator&, Context&, const Skipper&, Attribute&, mpl_::false_) const [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; Context = boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >; Skipper = boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::standard> >; Attribute = bla; Derived = boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::lexeme_directive<boost::spirit::qi::plus<boost::spirit::qi::negated_char_parser<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, false, false> > > >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, boost::fusion::cons<boost::spirit::qi::lexeme_directive<boost::spirit::qi::plus<boost::spirit::qi::negated_char_parser<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, false, false> > > >, boost::fusion::nil_> > >; Elements = boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::lexeme_directive<boost::spirit::qi::plus<boost::spirit::qi::negated_char_parser<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, false, false> > > >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, boost::fusion::cons<boost::spirit::qi::lexeme_directive<boost::spirit::qi::plus<boost::spirit::qi::negated_char_parser<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, false, false> > > >, boost::fusion::nil_> >; mpl_::false_ = mpl_::bool_<false>]'
/usr/local/include/boost/spirit/home/qi/operator/sequence_base.hpp:123:30:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/include/boost/function/function_template.hpp:1077:16:   required from 'boost::function<R(T0, T1, T2, T3)>::function(Functor, typename boost::enable_if_c<(boost::type_traits::ice_not<(boost::is_integral<Functor>::value)>::value), int>::type) [with Functor = boost::spirit::qi::detail::parser_binder<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::lexeme_directive<boost::spirit::qi::plus<boost::spirit::qi::negated_char_parser<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, false, false> > > >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, boost::fusion::cons<boost::spirit::qi::lexeme_directive<boost::spirit::qi::plus<boost::spirit::qi::negated_char_parser<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, false, false> > > >, boost::fusion::nil_> > >, mpl_::bool_<true> >; R = bool; T0 = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >&; T1 = const __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >&; T2 = boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >&; T3 = const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::standard> >&; typename boost::enable_if_c<(boost::type_traits::ice_not<(boost::is_integral<Functor>::value)>::value), int>::type = int]'
/usr/local/include/boost/function/function_template.hpp:1132:5:   required from 'typename boost::enable_if_c<(boost::type_traits::ice_not<(boost::is_integral<Functor>::value)>::value), boost::function<R(T0, T1, T2, T3)>&>::type boost::function<R(T0, T1, T2, T3)>::operator=(Functor) [with Functor = boost::spirit::qi::detail::parser_binder<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::action<boost::spirit::qi::lexeme_directive<boost::spirit::qi::plus<boost::spirit::qi::negated_char_parser<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, false, false> > > >, boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> > >, boost::fusion::cons<boost::spirit::qi::lexeme_directive<boost::spirit::qi::plus<boost::spirit::qi::negated_char_parser<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, false, false> > > >, boost::fusion::nil_> > >, mpl_::bool_<true> >; R = bool; T0 = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >&; T1 = const __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >&; T2 = boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >&; T3 = const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::standard> >&; typename boost::enable_if_c<(boost::type_traits::ice_not<(boost::is_integral<Functor>::value)>::value), boost::function<R(T0, T1, T2, T3)>&>::type = boost::function<bool(__gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >&, const __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >&, boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >&, const boost::spirit::qi::char_class<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::standard> >&)>&]'
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:183:19:   required from 'static void boost::spirit::qi::rule<Iterator, T1, T2, T3, T4>::define(boost::spirit::qi::rule<Iterator, T1, T2, T3, T4>&, const Expr&, mpl_::true_) [with Auto = mpl_::bool_<true>; Expr = boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::unary_plus, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::complement, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_, boost::spirit::char_encoding::standard>, boost::fusion::vector1<char> > >, 0l>&>, 1l>&>, 1l>&>, 2l>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::unary_plus, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::complement, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_, boost::spirit::char_encoding::standard>, boost::fusion::vector1<char> > >, 0l>&>, 1l>&>, 1l>&>, 2l>&>, 2l>; Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; T1 = bla(); T2 = boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::standard> >, 0l>; T3 = boost::spirit::unused_type; T4 = boost::spirit::unused_type; mpl_::true_ = mpl_::bool_<true>]'
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:247:31:   required from 'boost::spirit::qi::rule<Iterator, T1, T2, T3, T4>& boost::spirit::qi::operator%=(boost::spirit::qi::rule<Iterator, T1, T2, T3, T4>&, Expr&&) [with Expr = const boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::unary_plus, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::complement, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_, boost::spirit::char_encoding::standard>, boost::fusion::vector1<char> > >, 0l>&>, 1l>&>, 1l>&>, 2l>&, const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >&>, 2l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::lexeme>, 0l>&, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::unary_plus, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::complement, boost::proto::argsns_::list1<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::char_code<boost::spirit::tag::char_, boost::spirit::char_encoding::standard>, boost::fusion::vector1<char> > >, 0l>&>, 1l>&>, 1l>&>, 2l>&>, 2l>; Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; T1 = bla(); T2 = boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::standard> >, 0l>; T3 = boost::spirit::unused_type; T4 = boost::spirit::unused_type]'
main.cpp:48:9:   required from 'myCommandParser<Iterator, Skipper>::myCommandParser() [with Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; Skipper = boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::char_code<boost::spirit::tag::space, boost::spirit::char_encoding::standard> >, 0l>]'
main.cpp:61:66:   required from here
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: error: no match for call to '(const boost::phoenix::actor<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l> >) (boost::spirit::traits::pass_attribute<boost::spirit::qi::lexeme_directive<boost::spirit::qi::plus<boost::spirit::qi::negated_char_parser<boost::spirit::qi::literal_char<boost::spirit::char_encoding::standard, false, false> > > >, std::vector<char, std::allocator<char> >, void>::type&, boost::spirit::context<boost::fusion::cons<bla&, boost::fusion::nil_>, boost::fusion::vector0<> >&, bool&)'
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core.hpp:12:0,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/actor.hpp:264:9: note: candidate: typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr>::type boost::phoenix::actor<Expr>::operator()() [with Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>; typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr>::type = boost::phoenix::detail::error_expecting_arguments]
         operator()()
         ^
/usr/local/include/boost/phoenix/core/actor.hpp:264:9: note:   candidate expects 0 arguments, 3 provided
/usr/local/include/boost/phoenix/core/actor.hpp:273:9: note: candidate: typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr>::type boost::phoenix::actor<Expr>::operator()() const [with Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>; typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr>::type = boost::phoenix::detail::error_expecting_arguments]
         operator()() const
         ^
/usr/local/include/boost/phoenix/core/actor.hpp:273:9: note:   candidate expects 0 arguments, 3 provided
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:19:197: note: candidate: template<class A0> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, A0&>::type boost::phoenix::actor<Expr>::operator()(A0&) const [with A0 = A0; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         template <typename This, typename A0> struct result<This(A0 &)> : result_of::actor<proto_base_expr, A0 &> {}; template <typename A0> typename result_of::actor<proto_base_expr, A0 &>::type operator()(A0 & a0) const { typedef vector2< const actor<Expr> *, A0 & > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0> typename result_of::actor<proto_base_expr, A0 &>::type operator()(A0 & a0) { typedef vector2< const actor<Expr> *, A0 & > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0> struct result<This(A0 const&)> : result_of::actor<proto_base_expr, A0 const&> {}; template <typename A0> typename result_of::actor<proto_base_expr, A0 const&>::type operator()(A0 const& a0) const { typedef vector2< const actor<Expr> *, A0 const& > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0> typename result_of::actor<proto_base_expr, A0 const&>::type operator()(A0 const& a0) { typedef vector2< const actor<Expr> *, A0 const& > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); }
                                                                                                                                                                                                     ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:19:197: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 1 argument, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:19:458: note: candidate: template<class A0> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, A0&>::type boost::phoenix::actor<Expr>::operator()(A0&) [with A0 = A0; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         template <typename This, typename A0> struct result<This(A0 &)> : result_of::actor<proto_base_expr, A0 &> {}; template <typename A0> typename result_of::actor<proto_base_expr, A0 &>::type operator()(A0 & a0) const { typedef vector2< const actor<Expr> *, A0 & > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0> typename result_of::actor<proto_base_expr, A0 &>::type operator()(A0 & a0) { typedef vector2< const actor<Expr> *, A0 & > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0> struct result<This(A0 const&)> : result_of::actor<proto_base_expr, A0 const&> {}; template <typename A0> typename result_of::actor<proto_base_expr, A0 const&>::type operator()(A0 const& a0) const { typedef vector2< const actor<Expr> *, A0 const& > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0> typename result_of::actor<proto_base_expr, A0 const&>::type operator()(A0 const& a0) { typedef vector2< const actor<Expr> *, A0 const& > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:19:458: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 1 argument, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:19:838: note: candidate: template<class A0> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&>::type boost::phoenix::actor<Expr>::operator()(const A0&) const [with A0 = A0; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         template <typename This, typename A0> struct result<This(A0 &)> : result_of::actor<proto_base_expr, A0 &> {}; template <typename A0> typename result_of::actor<proto_base_expr, A0 &>::type operator()(A0 & a0) const { typedef vector2< const actor<Expr> *, A0 & > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0> typename result_of::actor<proto_base_expr, A0 &>::type operator()(A0 & a0) { typedef vector2< const actor<Expr> *, A0 & > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0> struct result<This(A0 const&)> : result_of::actor<proto_base_expr, A0 const&> {}; template <typename A0> typename result_of::actor<proto_base_expr, A0 const&>::type operator()(A0 const& a0) const { typedef vector2< const actor<Expr> *, A0 const& > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0> typename result_of::actor<proto_base_expr, A0 const&>::type operator()(A0 const& a0) { typedef vector2< const actor<Expr> *, A0 const& > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); }

/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:19:838: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 1 argument, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:19:1114: note: candidate: template<class A0> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&>::type boost::phoenix::actor<Expr>::operator()(const A0&) [with A0 = A0; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         template <typename This, typename A0> struct result<This(A0 &)> : result_of::actor<proto_base_expr, A0 &> {}; template <typename A0> typename result_of::actor<proto_base_expr, A0 &>::type operator()(A0 & a0) const { typedef vector2< const actor<Expr> *, A0 & > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0> typename result_of::actor<proto_base_expr, A0 &>::type operator()(A0 & a0) { typedef vector2< const actor<Expr> *, A0 & > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0> struct result<This(A0 const&)> : result_of::actor<proto_base_expr, A0 const&> {}; template <typename A0> typename result_of::actor<proto_base_expr, A0 const&>::type operator()(A0 const& a0) const { typedef vector2< const actor<Expr> *, A0 const& > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0> typename result_of::actor<proto_base_expr, A0 const&>::type operator()(A0 const& a0) { typedef vector2< const actor<Expr> *, A0 const& > env_type; env_type env = {this, a0}; return phoenix::eval(*this, phoenix::context(env, default_actions())); }

/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:19:1114: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 1 argument, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:246: note: candidate: template<class A0, class A1> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&) const [with A0 = A0; A1 = A1; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 &)> : result_of::actor<proto_base_expr, A0 & , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 const&)> : result_of::actor<proto_base_expr, A0 & , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 &)> : result_of::actor<proto_base_expr, A0 const& , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 const&)> : result_of::actor<proto_base_expr, A0 const& , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); }
                                                                                                                                                                                                                                                      ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:246: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 2 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:550: note: candidate: template<class A0, class A1> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&) [with A0 = A0; A1 = A1; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 &)> : result_of::actor<proto_base_expr, A0 & , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 const&)> : result_of::actor<proto_base_expr, A0 & , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 &)> : result_of::actor<proto_base_expr, A0 const& , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 const&)> : result_of::actor<proto_base_expr, A0 const& , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); }

/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:550: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 2 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:1001: note: candidate: template<class A0, class A1> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, const A1&>::type boost::phoenix::actor<Expr>::operator()(A0&, const A1&) const [with A0 = A0; A1 = A1; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 &)> : result_of::actor<proto_base_expr, A0 & , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 const&)> : result_of::actor<proto_base_expr, A0 & , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 &)> : result_of::actor<proto_base_expr, A0 const& , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 const&)> : result_of::actor<proto_base_expr, A0 const& , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); }

/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:1001: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 2 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:1320: note: candidate: template<class A0, class A1> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, const A1&>::type boost::phoenix::actor<Expr>::operator()(A0&, const A1&) [with A0 = A0; A1 = A1; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 &)> : result_of::actor<proto_base_expr, A0 & , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 const&)> : result_of::actor<proto_base_expr, A0 & , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 &)> : result_of::actor<proto_base_expr, A0 const& , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 const&)> : result_of::actor<proto_base_expr, A0 const& , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); }

/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:1320: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 2 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:1781: note: candidate: template<class A0, class A1> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, A1&>::type boost::phoenix::actor<Expr>::operator()(const A0&, A1&) const [with A0 = A0; A1 = A1; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 &)> : result_of::actor<proto_base_expr, A0 & , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 const&)> : result_of::actor<proto_base_expr, A0 & , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 &)> : result_of::actor<proto_base_expr, A0 const& , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 const&)> : result_of::actor<proto_base_expr, A0 const& , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); }

/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:1781: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 2 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:2100: note: candidate: template<class A0, class A1> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, A1&>::type boost::phoenix::actor<Expr>::operator()(const A0&, A1&) [with A0 = A0; A1 = A1; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 &)> : result_of::actor<proto_base_expr, A0 & , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 const&)> : result_of::actor<proto_base_expr, A0 & , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 &)> : result_of::actor<proto_base_expr, A0 const& , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 const&)> : result_of::actor<proto_base_expr, A0 const& , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); }

/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:2100: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 2 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:2576: note: candidate: template<class A0, class A1> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&) const [with A0 = A0; A1 = A1; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 &)> : result_of::actor<proto_base_expr, A0 & , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 const&)> : result_of::actor<proto_base_expr, A0 & , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 &)> : result_of::actor<proto_base_expr, A0 const& , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 const&)> : result_of::actor<proto_base_expr, A0 const& , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); }

/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:2576: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 2 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:2910: note: candidate: template<class A0, class A1> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&) [with A0 = A0; A1 = A1; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 &)> : result_of::actor<proto_base_expr, A0 & , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 &>::type operator()(A0 & a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 & , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 & , A1 const&)> : result_of::actor<proto_base_expr, A0 & , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 & , A1 const&>::type operator()(A0 & a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 & , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 &)> : result_of::actor<proto_base_expr, A0 const& , A1 &> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 &>::type operator()(A0 const& a0 , A1 & a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 & > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename This, typename A0 , typename A1> struct result<This(A0 const& , A1 const&)> : result_of::actor<proto_base_expr, A0 const& , A1 const&> {}; template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) const { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); } template <typename A0 , typename A1> typename result_of::actor<proto_base_expr, A0 const& , A1 const&>::type operator()(A0 const& a0 , A1 const& a1) { typedef vector3< const actor<Expr> *, A0 const& , A1 const& > env_type; env_type env = {this, a0 , a1}; return phoenix::eval(*this, phoenix::context(env, default_actions())); }

/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:31:2910: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 2 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:49:9: note: candidate: template<class A0, class A1, class A2> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&) [with A0 = A0; A1 = A1; A2 = A2; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:49:9: note:   template argument deduction/substitution failed:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:62:9: note: candidate: template<class A0, class A1, class A2> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&) const [with A0 = A0; A1 = A1; A2 = A2; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:62:9: note:   substitution of deduced template arguments resulted in errors seen above
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:75:9: note: candidate: template<class A0, class A1, class A2> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&) [with A0 = A0; A1 = A1; A2 = A2; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:75:9: note:   template argument deduction/substitution failed:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:88:9: note: candidate: template<class A0, class A1, class A2> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&) const [with A0 = A0; A1 = A1; A2 = A2; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:88:9: note:   substitution of deduced template arguments resulted in errors seen above
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:116:9: note: candidate: template<class A0, class A1, class A2, class A3> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:116:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 4 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:129:9: note: candidate: template<class A0, class A1, class A2, class A3> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:129:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 4 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:142:9: note: candidate: template<class A0, class A1, class A2, class A3> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:142:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 4 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:155:9: note: candidate: template<class A0, class A1, class A2, class A3> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:155:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 4 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:183:9: note: candidate: template<class A0, class A1, class A2, class A3, class A4> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&, A4&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&, A4&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3 , A4 & a4)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:183:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 5 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:196:9: note: candidate: template<class A0, class A1, class A2, class A3, class A4> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&, A4&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&, A4&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3 , A4 & a4) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:196:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 5 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:209:9: note: candidate: template<class A0, class A1, class A2, class A3, class A4> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&, const A4&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&, const A4&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:209:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 5 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:222:9: note: candidate: template<class A0, class A1, class A2, class A3, class A4> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&, const A4&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&, const A4&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:222:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 5 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:250:9: note: candidate: template<class A0, class A1, class A2, class A3, class A4, class A5> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&, A4&, A5&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&, A4&, A5&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3 , A4 & a4 , A5 & a5)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:250:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 6 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:263:9: note: candidate: template<class A0, class A1, class A2, class A3, class A4, class A5> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&, A4&, A5&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&, A4&, A5&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3 , A4 & a4 , A5 & a5) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:263:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 6 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:276:9: note: candidate: template<class A0, class A1, class A2, class A3, class A4, class A5> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&, const A4&, const A5&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&, const A4&, const A5&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:276:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 6 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:289:9: note: candidate: template<class A0, class A1, class A2, class A3, class A4, class A5> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&, const A4&, const A5&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&, const A4&, const A5&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:289:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 6 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:317:9: note: candidate: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&, A4&, A5&, A6&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&, A4&, A5&, A6&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3 , A4 & a4 , A5 & a5 , A6 & a6)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:317:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 7 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:330:9: note: candidate: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&, A4&, A5&, A6&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&, A4&, A5&, A6&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3 , A4 & a4 , A5 & a5 , A6 & a6) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:330:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 7 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:343:9: note: candidate: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:343:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 7 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:356:9: note: candidate: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:356:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 7 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:384:9: note: candidate: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6, class A7> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&, A4&, A5&, A6&, A7&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&, A4&, A5&, A6&, A7&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; A7 = A7; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3 , A4 & a4 , A5 & a5 , A6 & a6 , A7 & a7)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:384:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 8 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:397:9: note: candidate: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6, class A7> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&, A4&, A5&, A6&, A7&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&, A4&, A5&, A6&, A7&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; A7 = A7; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3 , A4 & a4 , A5 & a5 , A6 & a6 , A7 & a7) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:397:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 8 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:410:9: note: candidate: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6, class A7> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&, const A7&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&, const A7&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; A7 = A7; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:410:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 8 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:423:9: note: candidate: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6, class A7> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&, const A7&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&, const A7&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; A7 = A7; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:423:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 8 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:451:9: note: candidate: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&, A4&, A5&, A6&, A7&, A8&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&, A4&, A5&, A6&, A7&, A8&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; A7 = A7; A8 = A8; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3 , A4 & a4 , A5 & a5 , A6 & a6 , A7 & a7 , A8 & a8)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:451:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 9 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:464:9: note: candidate: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&, A4&, A5&, A6&, A7&, A8&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&, A4&, A5&, A6&, A7&, A8&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; A7 = A7; A8 = A8; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3 , A4 & a4 , A5 & a5 , A6 & a6 , A7 & a7 , A8 & a8) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:464:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 9 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:477:9: note: candidate: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&, const A7&, const A8&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&, const A7&, const A8&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; A7 = A7; A8 = A8; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:477:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 9 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:490:9: note: candidate: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&, const A7&, const A8&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&, const A7&, const A8&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; A7 = A7; A8 = A8; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:490:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 9 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:518:9: note: candidate: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8, class A9> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&, A4&, A5&, A6&, A7&, A8&, A9&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&, A4&, A5&, A6&, A7&, A8&, A9&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; A7 = A7; A8 = A8; A9 = A9; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3 , A4 & a4 , A5 & a5 , A6 & a6 , A7 & a7 , A8 & a8 , A9 & a9)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:518:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 10 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:531:9: note: candidate: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8, class A9> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, A0&, A1&, A2&, A3&, A4&, A5&, A6&, A7&, A8&, A9&>::type boost::phoenix::actor<Expr>::operator()(A0&, A1&, A2&, A3&, A4&, A5&, A6&, A7&, A8&, A9&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; A7 = A7; A8 = A8; A9 = A9; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 & a0 , A1 & a1 , A2 & a2 , A3 & a3 , A4 & a4 , A5 & a5 , A6 & a6 , A7 & a7 , A8 & a8 , A9 & a9) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:531:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 10 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:544:9: note: candidate: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8, class A9> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&, const A7&, const A8&, const A9&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&, const A7&, const A8&, const A9&) [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; A7 = A7; A8 = A8; A9 = A9; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9)
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:544:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 10 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
In file included from /usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator.hpp:12:0,
                 from /usr/local/include/boost/phoenix/core/detail/actor_operator.hpp:8,
                 from /usr/local/include/boost/phoenix/core/actor.hpp:296,
                 from /usr/local/include/boost/phoenix/core.hpp:12,
                 from /usr/local/include/boost/spirit/include/phoenix_core.hpp:11,
                 from main.cpp:14:
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:557:9: note: candidate: template<class A0, class A1, class A2, class A3, class A4, class A5, class A6, class A7, class A8, class A9> typename boost::phoenix::result_of::actor<typename boost::mpl::eval_if_c<boost::mpl::or_<boost::phoenix::is_custom_terminal<Expr>, mpl_::bool_<boost::is_placeholder<T>::value> >::value, boost::proto::terminal<Expr>, boost::mpl::identity<T> >::type::proto_base_expr, const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&, const A7&, const A8&, const A9&>::type boost::phoenix::actor<Expr>::operator()(const A0&, const A1&, const A2&, const A3&, const A4&, const A5&, const A6&, const A7&, const A8&, const A9&) const [with A0 = A0; A1 = A1; A2 = A2; A3 = A3; A4 = A4; A5 = A5; A6 = A6; A7 = A7; A8 = A8; A9 = A9; Expr = boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::assign, boost::proto::argsns_::list2<boost::proto::exprns_::basic_expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::reference_wrapper<std::__cxx11::basic_string<char> > >, 0l>, boost::phoenix::actor<boost::spirit::argument<0> > >, 2l>]
         operator()(A0 const& a0 , A1 const& a1 , A2 const& a2 , A3 const& a3 , A4 const& a4 , A5 const& a5 , A6 const& a6 , A7 const& a7 , A8 const& a8 , A9 const& a9) const
         ^
/usr/local/include/boost/phoenix/core/detail/preprocessed/actor_operator_10.hpp:557:9: note:   template argument deduction/substitution failed:
In file included from /usr/local/include/boost/spirit/home/qi/action/action.hpp:21:0,
                 from /usr/local/include/boost/spirit/home/qi/action.hpp:14,
                 from /usr/local/include/boost/spirit/home/qi.hpp:14,
                 from main.cpp:16:
/usr/local/include/boost/spirit/home/support/action_dispatch.hpp:178:14: note:   candidate expects 10 arguments, 3 provided
             f(attr_wrap, context, pass);
              ^
