In file included from main.cpp:1:
In file included from /usr/local/include/boost/spirit/include/qi.hpp:16:
In file included from /usr/local/include/boost/spirit/home/qi.hpp:22:
In file included from /usr/local/include/boost/spirit/home/qi/numeric.hpp:17:
In file included from /usr/local/include/boost/spirit/home/qi/numeric/real.hpp:21:
/usr/local/include/boost/spirit/home/qi/numeric/detail/real_impl.hpp:198:27: error: no matching member function for call to 'parse_exp'
                e_hit = p.parse_exp(first, last);
                        ~~^~~~~~~~~
/usr/local/include/boost/spirit/home/qi/numeric/real.hpp:168:29: note: in instantiation of function template specialization 'boost::spirit::qi::detail::real_impl<double, TextWithNumbers_grammar<__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > >::simple_real_policies<double> >::parse<__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >, double>' requested here
            return extract::parse(first, last, attr_, RealPolicies());
                            ^
/usr/local/include/boost/spirit/home/qi/numeric/real.hpp:179:17: note: in instantiation of function template specialization 'boost::spirit::qi::any_real_parser<double, TextWithNumbers_grammar<__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > >::simple_real_policies<double> >::parse<__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >, boost::spirit::context<boost::fusion::cons<CMyTag &, boost::fusion::nil_>, boost::fusion::vector0<void> >, boost::spirit::unused_type>' requested here
            if (parse(first, last, context, skipper, attr_))
                ^
/usr/local/include/boost/spirit/home/qi/directive/raw.hpp:63:25: note: in instantiation of function template specialization 'boost::spirit::qi::any_real_parser<double, TextWithNumbers_grammar<__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > >::simple_real_policies<double> >::parse<__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >, boost::spirit::context<boost::fusion::cons<CMyTag &, boost::fusion::nil_>, boost::fusion::vector0<void> >, boost::spirit::unused_type, const boost::spirit::unused_type>' requested here
            if (subject.parse(i, last, context, skipper, unused))
                        ^
/usr/local/include/boost/spirit/home/qi/detail/fail_function.hpp:38:31: note: in instantiation of function template specialization 'boost::spirit::qi::raw_directive<boost::spirit::qi::any_real_parser<double, TextWithNumbers_grammar<__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > >::simple_real_policies<double> > >::parse<__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >, boost::spirit::context<boost::fusion::cons<CMyTag &, boost::fusion::nil_>, boost::fusion::vector0<void> >, boost::spirit::unused_type, std::__cxx11::basic_string<char> >' requested here
            return !component.parse(first, last, context, skipper, attr);
                              ^
/usr/local/include/boost/spirit/home/support/algorithm/any_if.hpp:186:20: note: in instantiation of function template specialization 'boost::spirit::qi::detail::fail_function<__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >, boost::spirit::context<boost::fusion::cons<CMyTag &, boost::fusion::nil_>, boost::fusion::vector0<void> >, boost::spirit::unused_type>::operator()<boost::spirit::qi::raw_directive<boost::spirit::qi::any_real_parser<double, TextWithNumbers_grammar<__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > >::simple_real_policies<double> > >, std::__cxx11::basic_string<char> >' requested here
            return f(*first1, attribute) ||
                   ^
/usr/local/include/boost/spirit/home/support/algorithm/any_if.hpp:187:25: note: (skipping 10 contexts in backtrace; use -ftemplate-backtrace-limit=0 to see all)
                detail::any_if<Pred>(
                        ^
/usr/local/include/boost/function/function_template.hpp:1126:5: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<CMyTag &, boost::fusion::nil_>, boost::fusion::vector0<void> > &, const boost::spirit::unused_type &)>::function<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::attr_parser<const TagTypes>, boost::fusion::cons<boost::spirit::qi::raw_directive<boost::spirit::qi::any_real_parser<double, TextWithNumbers_grammar<__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > >::simple_real_policies<double> > >, boost::fusion::nil_> > >, mpl_::bool_<false> > >' requested here
    self_type(f).swap(*this);
    ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:183:19: note: in instantiation of function template specialization 'boost::function<bool (__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > &, const __gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > &, boost::spirit::context<boost::fusion::cons<CMyTag &, boost::fusion::nil_>, boost::fusion::vector0<void> > &, const boost::spirit::unused_type &)>::operator=<boost::spirit::qi::detail::parser_binder<boost::spirit::qi::sequence<boost::fusion::cons<boost::spirit::qi::attr_parser<const TagTypes>, boost::fusion::cons<boost::spirit::qi::raw_directive<boost::spirit::qi::any_real_parser<double, TextWithNumbers_grammar<__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > >::simple_real_policies<double> > >, boost::fusion::nil_> > >, mpl_::bool_<false> > >' requested here
            lhs.f = detail::bind_parser<Auto>(
                  ^
/usr/local/include/boost/spirit/home/qi/nonterminal/rule.hpp:221:13: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >, CMyTag (), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type>::define<mpl_::bool_<false>, boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::attr, boost::fusion::vector1<TagTypes> > >, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::raw>, 0> &, boost::spirit::qi::real_parser<double, TextWithNumbers_grammar<__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > >::simple_real_policies<double> > &>, 2> &>, 2> >' requested here
            define<mpl::false_>(*this, expr, traits::matches<qi::domain, Expr>());
            ^
main.cpp:20:19: note: in instantiation of function template specialization 'boost::spirit::qi::rule<__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> >, CMyTag (), boost::spirit::unused_type, boost::spirit::unused_type, boost::spirit::unused_type>::operator=<boost::proto::exprns_::expr<boost::proto::tagns_::tag::shift_right, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::terminal_ex<boost::spirit::tag::attr, boost::fusion::vector1<TagTypes> > >, 0> &, const boost::proto::exprns_::expr<boost::proto::tagns_::tag::subscript, boost::proto::argsns_::list2<const boost::proto::exprns_::expr<boost::proto::tagns_::tag::terminal, boost::proto::argsns_::term<boost::spirit::tag::raw>, 0> &, boost::spirit::qi::real_parser<double, TextWithNumbers_grammar<__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > >::simple_real_policies<double> > &>, 2> &>, 2> >' requested here
        numbertag = attr(NUMBER) >> raw[number];
                  ^
main.cpp:48:33: note: in instantiation of member function 'TextWithNumbers_grammar<__gnu_cxx::__normal_iterator<const char *, std::__cxx11::basic_string<char> > >::TextWithNumbers_grammar' requested here
    TextWithNumbers_grammar<It> g;
                                ^
main.cpp:29:25: note: candidate template ignored: couldn't infer template argument 'It'
            static bool parse_exp(Iterator&, Iterator const&) { return false; }
                        ^
In file included from main.cpp:1:
In file included from /usr/local/include/boost/spirit/include/qi.hpp:16:
In file included from /usr/local/include/boost/spirit/home/qi.hpp:22:
In file included from /usr/local/include/boost/spirit/home/qi/numeric.hpp:17:
In file included from /usr/local/include/boost/spirit/home/qi/numeric/real.hpp:21:
/usr/local/include/boost/spirit/home/qi/numeric/detail/real_impl.hpp:224:23: error: no matching member function for call to 'parse_exp_n'
                if (p.parse_exp_n(first, last, exp))
                    ~~^~~~~~~~~~~
main.cpp:32:25: note: candidate template ignored: couldn't infer template argument 'It'
            static bool parse_exp_n(Iterator&, Iterator const&, Attribute&) { return false; }
                        ^
2 errors generated.
